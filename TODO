TODOs:
2024-03-01 @ 09:37:17: * Add tilt-compensation to compass
2024-03-01 @ 09:37:17: * Actual in-the-water tests to better couple boat heading with rudder action.
2024-03-01 @ 09:37:17: * Add compass debug / calibration page 
2024-03-01 @ 09:29:47: * In calibration page, include IMU calibration code, or document instructions.
  - At least, update the code to output the calibrations in the format used by config.yaml

o Uninstall: 
  * make
  * gcc 
  * compiletc
  * python3-dev?
  which were needed for pip-based installation of smbus (pip install smbus) but not anymore.

****************************************************************************************************
****************************************************************************************************
****************************************************************************************************
      DONEs DONEs DONEs DONEs DONEs DONEs DONEs DONEs DONEs DONEs DONEs DONEs DONEs DONEs 
****************************************************************************************************
****************************************************************************************************
****************************************************************************************************
DONE * Fix all hw getters and setters. All "hw" numbers from arduino should just be raw numbers, and don't need getters.
DONE * Fix motor normalization and write unit tests.
DONE o 2023-08-28 - Add rudder sense device to board, and test and calibrate
x 2023-08-24 - How will you translate rudder angle (-1 <= 0 <= 1) to motor speed and duration?  Figure the motor duration as a percentage of hard over angle vs rudder speed. NOTE: Will be handled by brain, which will check frequently and stop the motor when the angle is correct.
x 2023-03-04 - Archive working configuration in $HOME. "home_date.tar"
x 2023-03-04 - Get PI talking to Arduino via serial interface
x 2023-03-04 - Migrate Python code for simulator to micropython
x 2023-04-12 - Remove extra newline from write in arduinoInterface - shouldn't need it. If we do, why?
DONE 2023-05-23 - In the middle of adding setters to the PID values.
DONE 2023-04-12 - Make sure send_to_arduino and receive_from_arduino still work!!
DONE 2023-04-12 - Re-flash arduino with updated C code.
DONE 2023-04-12 - In arduinoInterface test.  Add 'debug' (e=1) to testing.
DONE 2023-04-12 - I'm thinking that methods that are not simply internal properties should be named get_xxx and set_xxx.
DONE 2023-08-24 - !! Push development branch from laptop to GIT
DONE 2023-08-24 - pid_controller appears to be working. Push the development branch.
DONE 2023-04-12 - Fix brain, etc., which broke overhauling the controller.
DONE 2023-08-27 - Code-Review the places that use the Config object.  Overhaul list:
  - SKIP ./web/autopilotWebApp.py - NOTE: Will need rewrite when brain is done.
  - DONE ./web/modules/brain.py NOTE: Not done so much, but I'm rewriting the brain, so CR is now obsolete.
  - DONE (DELETED) ./web/modules/sensor.py
  - SKIP (DO WE NEED THIS?) ./web/modules/calibration/mpu9360-calibration.py
  - SKIP ./web/modules/imuInterface.py
  - SKIP ./web/modules/file_logger.py
  - DONE ./web/modules/mpu9250Interface.py
  - DONE (DELETED) ./testing/imuTestInterface.py
  - DONE ./web/modules/calibration/debugmpu.py
  - DONE ./web/modules/vectormath.py
  - DONE ./testing/send_to_arduino.py
  - DONE ./testing/read_from_arduino.py
  - DONE ./web/modules/status.py
  - DONE ./web/modules/direction.py
  - DONE ./web/modules/config.py
  - DONE ./web/modules/pid_controller.py
  - DONE ./web/modules/island_time.py
  - DONE ./web/modules/arduinoInterface.py
  - DONE ./web/modules/arduinoSerialInterface.py
  - DONE ./testing/arduinoFileInterface.py
  - DONE ./web/modules/test_boat.py  ## Test boat can get properties from local object, but real boat should read from sensor (heading, heel, ...) So, maybe revisit this.
  - DONE ./web/modules/boat.py
  - DONE ./web/modules/anglemath.py
DONE: * Note that we got d=2 and s=255, but no motor.  * .0000 actual: 1035.0000
DONE # 2023-11-09 @ 08:22:33 : Rewrite brain to set desired turn rate instead of rudder angle.
DONE # 2023-11-09 @ 09:03:57 : You just rewrote the brain to use the turn rate as the metric.  Now test to see if it can work.
DONE  - Running run_webserver, can't find the templates.
DONE  - Getting out of synch with reads from run_webserver, but seems fine with reads from run_brain_test. Is failure (not finding templates) causing this problem? Or because running as Flask?
DONE  - Explain THAT -- where's the re-enablement (clutch-off) coming from?
DONE o mainNav showing big square checkbox instead of "simple" slider button.
DONE o Changing status from another browser does not influence the status or course on THIS browser.
  This may be why it's also malfunctioning on phone (touch screen) browsers.  Works fine with
  mouse.  Maybe need a toggle switch and two indicator lights.  Possibly brain is not running
  single instance, and so it's got different "course" values for different clients.  See about
  making brain a singleton somehow.
DONE  o !! Clutch status does not influence the ON OFF switch. Need to turn it off if clutch is off.
DONE o Apply corrections (biases) for each of the IMU stats. Gyro turn rate is always -1.7 or -1.8
DONE o Adjust the course or turn rate tolerance so the motor doesn't cycle so much.
DONE o Convert PI to its own network after first investigating how to restore 'orion-based' network easily.
DONE o Add easy-to-find, interactive calibration program that finds rudder limits, allows setting of gains, etc. Persist (perhaps) in config.yaml, or overwrite with calibrations.yaml
  DONE - Reset biases etc.

DONE o Flask Not catching control C keyboard interrupt
DONE * See run_test_081_000_150.log (`egrep "TEST|Arduino"`): Why did we get instruction  to go starboard (d2@255) 
  when we just set the course to 081 and that was presumably the right course? 
  ANSWER: Test code was flawed. Sent /adjust_course/81 which told AP to ADD 81deg to current course.
DONE ! See run_test_081_000_150.log (`egrep "TEST|Arduino"`) and note that when tacking to port, direction got 
  set to 2, which is to starboard.  Should Arduino be easier to understand? dR and dS?
  ANSWER: Test code was flawed. Sent /adjust_course/XX which told AP to ADD XXdeg to current course. (so, if traveling 070, 
  then adjust_course/60 (10 deg to port) was causing course to update to 130.
